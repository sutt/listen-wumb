Overall ideas:

    be able to listen to WUMB curated songs easily...

    use youtube to listen to the tracks
        - search and match 
            - (from ...) is the hard part
        - use embedded player to play continuously

    report which songs were found and misses:
        - I wonder if the videos info will have the

    enter in a time plus date 
        - also allow shows e.g. Holly Harris 6-9pm Saturday

    liking and storing:
        - personal likes / dislikes
        - bookmarks...go to a particular route to "save" time of the song
        - backend that stores parsed playlists + associated youtube addresses

    downloading
        - use youtube-dl to download the songs
        - use youtube-dl to save the songs to cloud
        - use ffmpeg to extract audio only

    other platfroms:
        - spotify?
        - associated websites:
            - beale street caravan

6.24

        player api reference
        https://developers.google.com/youtube/iframe_api_reference#Operations

6.22

    Plan of Attack:
     - get proxy-2 setup, and into the pipeline
     - get this express <-> script.js figured out
     - then move the searching functionality to server-sdie
     - from there start building out search caching 

     [x] standup proxy-2 on new port
     [~] how to switch proxy-2 as enpoint on?
        - command line arg?
     [~] research + prototype express <-> js
     [x] move search server side
        [x] hbs variables attached to params and used server side
            - since frontend js is based on route
        [x] fetch -> node-fetch

    [x] test the local site dead+alive
        [x] how to control TestingSwitches from frontend?
            - look in to how scrape did ?live
            - when proxy2-serverside code needs to determine url for search endpoint
            [x] why is key not loading? -> need .dotenv package
            [x] not getting ?live param stuck on
                [x] cp script.js
                [x] why does Aimee Mann keep getting stuck on site-mock?
                    
                    -> escape characters:
                        
                        actual: Aimee Mann	True Believer (from @#%&*! Smilers)
                        encoded: &artist=Aimee%20Mann&title=True%20Believer%20(from%20@

                        [ ] what is the character preventing this ?
        

    [x] deploy proxy-2
        [x] delete existing app
        [x] get current deploy frontend to match
    
    [x] Test Deployment
        [~] get a new api token
        [x] Test Dead
        [x] Test Each Alive?
    
    [x] On deployyment, bug: parse?live=true as default
        [x] is this seen on local as well?
            -> not on parse
        [x] verify on deploy
            -> false alarm

    [ ] deploy version still making search requests to mock-site (instead of proxy-2)
        [x] verify on local -> correct there
        [ ] fix and deploy
            [ ] how to verify if deploy went through?

    [x] autoplay working
        -> its tough, lookas like there's it depends if user brings focus to the webpage, it will autoplay otherwise notfocus
        

    [ ] make site-mock better
        [ ] get actual songs on site mock
        [ ] more pages on page

    [ ] frontend improvements
        [ ] fix async load out-of-order `vids` bug
        [ ] player autoplay
        [ ] date + time logic
        [ ] still load existing playlist
    
    
    [ ] prototype the search cache
        [ ] add mongoose + Model
        [ ] .find Methods
        [ ] add api rate limiting on proxy-2
            no more than 5 requests in 10 seconds (without override)

    misc
        
        [ ] does embedded player do commercials on incognito?
        [x] need to split album from title
        [ ] better way to handle insertion to js from express
        [ ] we can cache scrapes as well
        [ ] why doesn't intellisense work well in express workspaces?
        [ ] each signed-in user has their own api key associated with theri account

    [ ] add scraping logic and basic player controls
        [ ] date + time input buttons
        [ ] tie the parameters of scraper to it
        [ ] backend logic
            [ ] parse string times
            [ ] tie ?d= wumb.org paramter to a particular date
        [ ] hard code the number of songs to play
        



6.21
   
   http://10.1.10.106:8880/guest/s/default/?ap=f0:9f:c2:6c:c2:98&ec=Lk0LfdVBUfriVQMTChpkCiCGnyq_ceWwNpfJ0IhWIKxxXgxTiZiQM0e-sw0U0C9fGu7MuY-9gCqyPU8sHiOuDHuGQRhuEFYGeCkL9DeH_PpidVV0HPQE5bFDjzJUE70hjcur--yzzz55ashSWIP0Axoz5_iSy8X-MUh1UjtHtL5lb_32_43n5Qh-hEWk0X6B

   200 - prep
    10 - js logic
    20 - js logic
    30 - break
    40 - break
    50 - js logic
   300 - js logic
    10 - js logic
    20 - break
    30 - test + commit

    [x] Connect the three elements
        [x] Add Next button to demo
        [x] add currently playing div highlighter
        [x] connect the yt results to vids
        [~] autoplay
        [x] double skip bug
        [x] Test Dead
        [x] Test Live
        [~] problem in the order returned

    [ ] Deploy
        [x] login to personal
        
        [x] how to deploy as subtree?  
            https://stackoverflow.com/questions/5977234/how-can-i-push-a-part-of-my-git-repo-to-heroku

        [x] how to do this with environmental variables?
            >heroku create -a wumb-front-v1 
            >git subtree push --prefix frontend heroku master
            >heroku config:set ENV=val --app=wumb-front-v1
            >heroku create -a wumb-site-mock  --remote heroku-site-mock

        [x] deploy all three
            [x] account signup
            [x] env variables
            [x] frontend/
            [x] proxy-1
            [x] add URL switches
            [x] mock-site

            [x] test with vids = [] (empty on init)
            [x] commit - the test flag changes
            [x] push changes to frontend and proxy
        
        
            
        [x] How to switch testing action without code control?
            - different urls

        Testing Scenarios:
            
        /home:
            parser   -> heroku-proxy -> heroku-site-mock
            searcher -> heroku-site-mock

        /pagelive
            parser   -> heroku-proxy -> wumb
            searcher -> heroku-site-mock

        /searchlive
            parser   -> heroku-proxy -> heroku-site-mock
            searcher -> youtube-api

        /alllive
            parser   -> heroku-proxy -> wumb
            searcher -> youtube-api

6.20

    [x] check that quota has reset 
        -> yes!
        -> firing off one request now 9pm EST to see when it resets

    [x] get a yt-embed-player running
        
        [x] research
            
            basic embedding with iframe
            https://developers.google.com/youtube/player_parameters
                seems like you can't actually control the playlist

            using the api
            https://developers.google.com/youtube/iframe_api_reference

        [x] proof of concept:    
            [x] using "Getting started" example
                - why doesn't it autoplay on load?
            [x] loading a video
            player.loadVideoById(
                {"videoId": "FKh8hjJNhWc", 
                "startSeconds":22, 
                "endSeconds":33}
                )
            player.playVideo()
            player.pauseVideo()
            player.getCurrentTime()
            player.getDuration()

        [x] build a list of required params
            [x] loading a song
            [x] playing/pausing
            [x] event for when song is up
            YT.PlayerState:            
                BUFFERING: 3
                CUED: 5
                ENDED: 0
                PAUSED: 2
                PLAYING: 1
                UNSTARTED: -1
            [ ] getting info on the video:
                - duration

        [ ] bugs - getting autoplay to start is buggy:

            Failed to execute 'postMessage' on 'DOMWindow': The target origin provided

            https://stackoverflow.com/questions/27573017/failed-to-execute-postmessage-on-domwindow-https-www-youtube-com-http


    [ ] get a heroku account personally
    [ ] deploy proxy server to heroku
    [ ] better solution for .js -> .hbs / fill in key

    [ ] move yt-search onto proxy



6.19

    How to Solve the quota limit:
        - use the user quota instead of the non-logged in version?
            - investigate by doc:
                [x] difference between quotas
                [x] api quotas
                    https://console.cloud.google.com/iam-admin/quotas?service=youtube.googleapis.com&project=listen-wumb
                    - "queries per minute"  : 1,800,000
                    - "queries per day"     :    10,000
                        
                        this guy is wondering the same thing:
                        https://stackoverflow.com/questions/62578928/google-api-quota-limits-for-youtube-api

                        all the stackoverflows say the same thing:
                        https://stackoverflow.com/questions/66673884/youtube-api-quotas-please-explain-quota-exceeded-how-to-solve
                        https://stackoverflow.com/questions/58116255/youtube-v3-api-quota-usage-assist
                        https://stackoverflow.com/questions/42998086/youtube-video-uploads-rejected-before-api-quota-limit-reached
                        https://stackoverflow.com/questions/43158150/our-application-uploads-hundreds-of-videos-per-day-using-the-youtube-api-but-no
                        https://stackoverflow.com/questions/42998086/youtube-video-uploads-rejected-before-api-quota-limit-reached
                        https://stackoverflow.com/questions/66673884/youtube-api-quotas-please-explain-quota-exceeded-how-to-solve

        - use bing search api
            - looks promising
            - $7 / 1,000 requests

        - spotify api

        - use an economical approach to yt-search with:
            - previous search cache-ing, "memo-ization"-stratgey
            - user log-in to be able to search new blocks
                - move yt-search server-side
            - can have a microservice serverside, to check my api quota and display it clientside
                - this is because we want the cloud console key to be hidden


6.18

    [x] build a html display of js results

    [x] initial proof of concept for YT-search

    [x] build a node app to send the page with the key
        [x] send the basic html
        [x] how to serve javascript file?
            https://expressjs.com/en/starter/static-files.html
            -> express.static('public')
        [x] demonstrate how to do this in a repo with handlebars installed
        [x] how do you put the key into js file?
        [x] apply the change from root -> frontend as git mv
        [x] commit initial frontend
    
    [x] stub out the key insertion handlebars solution
        [x] commit that

    [x] add yt search functionality to script.js
        [x] add cors to cross-site
        [x] why is it rendering as js obj in ul
        [x] increase the timeout to view a increase the async rendering
        [x] convert script js to hbs to turn on bTesting
        [x] demonstrate the async nature of loading up the table
            [x] show the uls get rendered
            [x] build a mock youtube response app

    [x] preparse project for next step:
        [x] change port 3000 -> 3004
        [x] observe the quota - reset + increment
            -> it did not reset at PDT mignight, maybe rolling 24 hours?
        [x] turn the testing params on/off easily
        [x] build a setup.bat
        [x] get actual yt-search data onto mock-site
            [x] demo loading json files from object
            [x] how to load all files in a directory?

    [x] build a readme
        [x] quickstart section
            - how to setup the .env
        [x] remove testing args
        [x] draw diagram of pipeline
    
    [x] make the mock-site return actual youtube data
        [x] get example of yt-search api response
        [x] build list of shortvideos for player testing
            
            use this to find params:
            https://developers.google.com/youtube/v3/docs/search/list?apix=true&apix_params=%7B%22part%22%3A%22snippet%22%2C%22order%22%3A%22viewCount%22%2C%22q%22%3A%22skateboarding%20dog%22%2C%22type%22%3A%22video%22%2C%22videoDefinition%22%3A%22high%22%7D
        
                https://youtube.googleapis.com/youtube/v3/search?
                    part=snippet
                    &order=viewCount
                    &q=skateboarding%20dog
                    &type=video
                    &videoDefinition=high
                    &videoDuration=short
                    &key=[YOUR_API_KEY]'

    [x] check if site does actually scrape

    [~] making the initial table fancier
        [~] add a css to and some classList stuff to make exapndeable subdirs for the result

    

    [~] how to code a file with js intellisense but hbs extension to enable key insertion?
        -> just using cp

    [x] perform search for each of the items
        [x] need to remove "(from <album-name>)" from `title`

    misc questions:
    
        [x] how can we fetch from wumb.org from the client since that site is http while ours is likely https?
            -> yes via proxy

        [ ] how to decode special characters?
            'Everlast - What it&#39;s Like (Music Video)' 
            I think that's the apostrophe

        [ ] extra helpful params in search api?
            [ ] limit the duration
                - could match the duration from the radio
            e.g. sort by viewCount
            https://developers.google.com/youtube/v3/guides/implementation/search

        [ ] get one song from full album
            b/c often full album is upload, 
            the below has a description with each of the songs + timestampm on it
            example - Ginny Hawker and Kay Justice	Waves on the Sea (from Bristol)
                    https://www.youtube.com/watch?v=cO8W0UOtr3Q

6.17
    [x] get proxy server running the fetch
        [x] why doesn't .text() on the fetch work?
        https://gomakethings.com/converting-a-string-into-markup-with-vanilla-js/

    [x] get a git init/commit in there

    [x] get parsing on the DOM from the fetch

    [x] build a static site to simulate the page (no wifi)
        -> site-mock/ express server on port 3005
        -> could just use python -m http.server

    problems:
        [x] we get a lot of \n's in the innerHTML
        [x] dwe also lose our \t which means we don't parse the table correctly for `artist` vs `time` fields
        [x] solutions...try a differnt method to convert from string to html

    [x] Youtube ProofOfConcept
        [x] get youtube api key
        [x] find demo example

            https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=20&q=Beatles%20Seargent&type=video&key=

            Youtube search: javascript
            https://github.com/youtube/api-samples/blob/master/javascript/search.js

            Youtube search: python
            https://github.com/youtube/api-samples/blob/master/python/search.py

            [~] get the auth.js part working, then the search sample
                https://github.com/youtube/api-samples/blob/master/javascript/auth.js
        
        [x] test if .env can work in proxy1
            -> install and import `dotenv` npm package

        [~] is there a way to hide key without using node?
            -> just make it node

        [x] how to serialize in for url?
            -> encodeURI(searchStr)
            
        Misc notes on Google API's

            quotas on youtube
            https://developers.google.com/youtube/v3/determine_quota_cost#videoCategories

            how to restrict a key:
            https://cloud.google.com/docs/authentication/api-keys?hl=en&visit_id=637596178206159069-1127291161&rd=1

            Edit Quotas here (?):
            https://console.cloud.google.com/iam-admin/quotas?service=youtube.googleapis.com&project=listen-wumb

6.13

All Programs on the station
http://www.wumb.org/programs/programdescriptions.php?SortPrograms=4

Affliliate Sites:

    No playlist but does have a soundcloud:
    https://www.bealestreetcaravan.com/weekly-show/bsc2532/


[x] how to make fetches from https document to http remotes?
    - build a proxy server


example playlist, saturday with Holly Harris:
http://wumb.org/cgi-bin/playlist1.pl?date=210522
http://wumb.org/cgi-bin/playlist1.pl?date=210521

    -> notice each day changes by one

parsing notes:
    
    tbs = document.getElementById("MainContentTextOnly").getElementsByTagName("tbody")
    
    Array.from(tbs).map( tb => {return {time: tb.children[0].innerText.split("\t")[0], artist: tb.children[0].innerText.split("\t")[1], title: tb.children[1].innerText}} )

end