Overall ideas:

    be able to listen to WUMB curated songs easily...

    use youtube to listen to the tracks
        - search and match 
            - (from ...) is the hard part
        - use embedded player to play continuously

    report which songs were found and misses:
        - I wonder if the videos info will have the

    enter in a time plus date 
        - also allow shows e.g. Holly Harris 6-9pm Saturday

    liking and storing:
        - personal likes / dislikes
        - bookmarks...go to a particular route to "save" time of the song
        - backend that stores parsed playlists + associated youtube addresses

    downloading
        - use youtube-dl to download the songs
        - use youtube-dl to save the songs to cloud
        - use ffmpeg to extract audio only

    other platfroms:
        - spotify?
        - associated websites:
            - beale street caravan
10.3

    [x] get full stack up and running
        [x] set default start date to Sept 1, 5pm
        [x] test fully live:
            localhost:4000/alllive
            localhost:4000/home

    [ ] first load usually fails...
        - this occurs because the first parse returns the current date
        [ ] build a fallback option
        [ ] build a repeat loop 

    [ ] get rid of cached mock-yt-results
        e.g. there's the wutang song result for many
        [ ] at least do this for the default time

    note: using a proxy server to return this page:
        https://www.youtube.com/results?search_query=joe+moakley

        -> get's us around having to use google api


10.2

    Other good stations
        https://theriverboston.com/discover/just-played/
        http://wxrv.tunegenie.com/onair/

9.28

    proof-of-concept for new search action is complete in:
        misc/cookie-fetch-2/index.js

        change the `searchDate` in the script and run:
            node index.js > results.html
        then open the page

    scratch workaround this concept is available in misc/cookie-fetch

    [x] port: cookie-fetch-2/index.js to proxy-2/controllers/parse-api.js

    [x] add site-mock logic for new script
        - just one page with results, served back
        [x] get pages loaded
        [x] need to allow a put to go thru
        [x] variable which ties the put's body to the get
        [x] does the script work without a valid cookie?
        

    [x] frontend logic scraping logic
        [x] remove the code from script.js, place into hbs

    [ ] add diagnostic script for the remote:
        e.g. > heroku run node diagnose-parse.js
        >>> Site is responding correctly
        [ ] add this in parse_modules as a script we can run just like fetch-cookies-2:
            > node diagnositic.js > wumb-9-1.html

    [x] what is the average request time: locally and live?
        -> locally: 50-70ms
        -> live:    6000 ms

    [ ] acf_nonce breaks the scrape today
        [x] quickfix 
        [ ] add that aspect in
            [ ] requires html parsing
            looks like: _acf_from & _acf_nonce changed
                [ ] may want to just load the whole body from the html elements
    
    [ ] error hanlding in parse_modules/main/scrapeSite
        - send back a response in `catch` statements
        - also loop thru multiple tries after failure
    
    [ ] add error logging to heroku logs / database
        - console.log will get it in heroku logs,
        - write to db 

    [ ] DOMParsing changes on frontend or toJSON on the serve side

    todos:
        [ ] parse html to view
        [ ] build some asserts to see if the searchDate specified is changing what's returning
        [ ] how to get current dates songs?
        [ ] error handling for script
            - this allows multiple try/catches before failing

    Down the road:

        [ ] scrape the existing hidden website
            [ ] what's the site address?
                [ ] how far back does it go?

        [ ] add a parse-cache to the backend



9.20

    Get site to work with site change:

        - some kind of weird persistence of the playlist date across page reloads

        - removing cookies from get request makes the request current day

            "credentials": "omit"

            - but keeping the credentials will get page with 

        - ok, so server-side checking of the cookie for what to send back

            this can be seen in the GET to playlist-archives

            same:
                SSESS2744f84ab896362390472b0afbbe54dd
            
            different:
                nv7rsan84fq67f2gc2glmfro57
                9abj9n5g6n57kh6pth97gi6eqp

            - this was demonstrated by changing the cookies in incognito to match the other
            - also, removing cookies does the present day even if you searched others

        - but it appears the cookie value is arbitrary and can be altered

            in DevTools > Applications >Cookies

        [x] can we spoof the cookie?

            [x] in the secondary GET request, 
                -> yes

                see: misc/cookie-fetch/
                    > node index.js > output.html

                    "cookie": "SSESS2744f84ab896362390472b0afbbe54dd=nv7rsan84fq67"

                - but, this only works when you've established a session seesion token, at least by the PUT request

                [~] check that the browser doesn't need to be active to maintain a session

            
            [x] verify you can receive the token from a node-fetch constructed POST


            notes:

                in browser:
                - first omit the credentials, then add to header
                    -> doesnt work b/c chrome-dev-tools disallows constructing fetches that way
                    -> but does work in node-detch request construction

                - note: we get set-cookie in the PUT response headers

        pragmatic questions:
            [x] can we do the search without cookies?
                (and therefore completely head-less)
                -> no
            [x] can we spoof the cookies or acquire them in headless form?
                see: https://stackoverflow.com/questions/34815845/how-to-send-cookies-with-node-fetch

                    - note: might not be respected in Chrome / DevTools
                            but should work with node-fetch or others

        theoretical questions
            [x] how does a 302 to work from a fetch?
            [x] what does this 302 response mean

7.25

    get work done on the deploy
    [x] clone down latest from JR
    [x] run it locally
    [x] deploy it to wumb.herokuapp


    work through v1 checklist

    [ ] refresh the api key
        [x] how did this get exposed? -> misc/files/api-demo.sh
        [x] anything else exposed like atlasdb url? -> no
        [x] reset the key on dashboard
        
        [x] what parts of the codebase / prod servers need updates?

            - env files for proxy-2 and deploy?

            - heroku config:
                on proxy-2 and 

            [x] update files, 
                - there shouldn't be any git status changes, right?
            
            [~] test that the current api key is down
                -> not yet
            [x] test that the current api key works
            
            [x] new deployments?
                - update config, push a dummy commit to each app?
                    [x] proxy-2
                    [x] deploy-1

            [x] test all apps now work
            
                [x] some kind of cors error?
                    
                    -> not a cors
                    
                    -what's changed since last deploy on july4?
                     >git diff 70a7468a6  -- proxy-2

                    - does return not work inside the catch statement? 
                        - seems that way

    
    [x] there is no cache?
        [x] verify that songs are not caching
            - can use a request and then see cacheStats display it
            - can compare against frontend-v1 running locally

        -> problem is in writeResult
        
        [x] if compare the v1-frontend running against the deployed backend

        there are two ways to fix it:
            A.) fix the client side param encoding?
                - do we need date+ time to checkCache?
                - also, the encodeURI doesn't usually work with an ampersand etc
            B.) Hardening server-side against this
                -> took this route

    [x] get it to run locally
    
    [x] fix the clientside request on search-yt-api
        [x] fix the encodeURI aspect
        [x] add date + time to query params
            -> this allows /blocks down the road
        
    
    [ ] change the urls on the frontend:
         wumb-proxy-2.herokuapp.com -> wumb.herokuapp.com


    

7.13

    [x] get latest frontend and test
    
    [x] change the frontend to root
        
        [x] check that it works
            [x] .gitingnore
        [x] npm install
        [x] npm start on front    
            [x] retry the copy-deploy
            [x] add invoke comment instructions
            [x] add the browserlist to package.json
        [x] add deploy-1/package-lock.json to root .gitignore
        [x] npm run build
        [x] run backend manually
            [x] get the star route in proxy-2 controller
                [x] find previous example -> sandbox/mern-review
        [x] try it all again
                misc/utils > copy-deploy.sh
                deploy-1   > npm install
                deploy-1   > npm run devstart   (run frontend separately)
                deploy-1   > npm run build
                deploy-1   > node backend/index.js
                broswer:    localhost:3003/
        [x] commit
            two parts: 1.) utils + nec. changes 2.) deploy-1

    [x] attempt to deploy
        [x] create heroku app
        [x] do we need the mars buildpack? -> no; do not add it
            https://create-react-app.dev/docs/deployment/#heroku
            https://github.com/mars/create-react-app-buildpack
            >heroku buildpacks:set mars/create-react-app --app=wumb

        Here's how you push a build

        >git subtree push --prefix deploy-1 heroku-deploy-1 master

        -> need to NODE_ENV=prod to config for the app to communicate with db

    [x] can front connect to local backend?
        -> via .env with REACT_APP_BACKEND=local

    [x] somethings up with the DB? 
        why is cacheStats not returning songs that have been played?
        [x] show: doesn't cache on my react, does cache on frontend-v1
            [ ] check logs for the write message?
        [x] how do we connect with AtlasDB and view data?


        
    notes on react-frontend
        
        - are blocks available in frontend?
        - need auto play for songs
        - where is the time input?



7.7

    [x] build a deploy following pattern from previous
        
        [x] script that copies both current frontend + backend
            [x] basic test rsync

            rsync -av --exclude='path1/to/exclude' --exclude='path2/to/exclude' source destination
            
            rsync 
            -av 
            --exclude='path1/to/exclude' 
            --exclude='path2/to/exclude' 
            source 
            destination

            [x] write the correct rsync

                rsync -vr --exclude='node_modules' ../x ./x_new

                [x] how to copy hidden files?
                    [x] does folder copying work? -> yes

        [x] build a shared package.json
            - packages from both?
            - npm start
            [x] node script to combine packages

        [x] need to add a .gitignore to deploy-1 via script
            ignore frontend/build

        [x] run locally
            [x] handle installing packages locally
            [x] is node_modules gitignore'd?

            [x] how do we npm run build for the frontend directory?
                -> we don't, frontend must be at root

            notes:
                https://create-react-app.dev/docs/deployment/#heroku
                    https://github.com/mars/create-react-app-buildpack

        
        [x] write to file which git commits the files were on
            >git log -n 1
        
        [~] need to toggle local build on/off
            - via branches?
                - but this requires not .gitignoring the build folder
                    - so change that too on the built branch?
        [~] need to add local dev urls
        [~] how to switch on off testing/live switches?
        [x] how to handle .env file(s)?
            - does it work with .env inside backend/ ?

        Ideal directory structure

            deploy-1/
            |
                frontend/
                |
                    src
                    ...

                backend/
                |
                    db/
                        |
                        conn.js
                    ...
                    index.js

            |
            package.json
            |
                utils/
                |
                copy.sh
                |
                install.sh
                |
                deploy.sh


        Example directory structure

            deploy-1/
            |
            |   public/
                |   ...
                scr/
                |   ...
                api/
                |
                    index.js
                    db/
                    |   conn.js
                    ...
            |
            package.json
            [package-lock.json]
            .gitignore

            tricks nec:
                
                - package.json uses:
                    "scripts": {
                        "r-start": "react-scripts start",
                        "start": "node api/index.js && npm run build"
                        ...
                    }
                
                - combine dependencies
                    "dependencies": {
                
                - api/index.js sets up a static:

                    app.use(express.static(path.join(__dirname, '../build')))
                
                - serve the built folder
                    
                    app.get('*', (req, res) => {
                        res.sendFile(path.join(__dirname, '../build')

                    - this occurs below all other routes

                    this is nice because it serve all the assets too 
                    via the wildcard

                - add that mars buildpack


    
    [ ] how to get params from url bar into react app's initial state?




7.4

    [ ] check that the  setting on heroku
        -> resources/hobby-basic
        [ ] check critical error in logs

    [ ] get a solid workflow to contribute to wumb-front-2
        [ ] how to get around package.lock
        [ ] fork on my github

    [ ] change the default on / route to 30 minutes before 
        present time
        - but what if there are no songs in that time period?
        - also this requires a second parse as you "catch up"

    [x] deploy the new app structure
        [x] first test locally

    [ ] /parse is slow to finish but quick to initally load
    
    [x] unhandled promise rejection in external resource request
        
        using:
            wumb-proxy-2.herokuapp.com/search-yt-api?live=false
        
        [x] what fallout does this cause?
            -> concurrent valid requests do get served
        [x] reproduce after deploy
        [x] reporduce locally
        [x] fix the issue


7.3

    [ ] add the correct historical playlist in
    
        http://50.241.124.209:8080/cgi-bin/plarchive/playlist1.pl?date=210327

        [x] how late, earlier does this calendar go?
            Dec 14, 2019 to Present
        [ ] find older archives:
            
            http://wumb.org/cgi-bin/playlist1.pl?date=160330&amp;bs=1459389722
            
            Snapshot on Aug 11, 2012:
            July28 - works
            https://web.archive.org/web/20120811172158/http://wumb.org/cgi-bin/playlist1.pl?date=120728
            Aug 10 - works
            https://web.archive.org/web/20120811172304/http://wumb.org/cgi-bin/playlist1.pl?date=120810

        [x] what is this ip adr? can it be substitued? -> no
            -> wumb.org: 205.178.146.236:80
        [ ] there are other date= styles, correct?
        [ ] does this url work for most recent playings?
        [ ] what would it take to scrape the last 8 years?

    random extras:
        
        https://onlineradiobox.com/us/wumbfm/playlist/
        https://onlineradiobox.com/us/wumbfm/
        http://player.streamguys.com/wumb/sgplayer/player.php
        https://web.archive.org/web/20200810022336/http://wumb.org/cgi-bin/playlist1.pl
        http://www.wumb.org/program-guide/2021/07/july-programming-highlights-6/
        http://50.241.124.209:8080/cgi-bin/archive/archive1.pl
        https://www.youtube.com/watch?v=O7EcT5YzKhQ

    [x] should have chromecast option
        -> casting page works

    [ ] prevent trying to play nonEmbeddable videos
        [ ] test this on canned heat example to see if it works

    [ ] Build a dummy user signed-in/out for frontend behavior
        [ ] signed out user sees the cached blocks as choices
        [ ] signed user sees calendar selection

    [x] deploy + test new features
        [x] proxy-2
        [x] front-end

    [ ] build a client to pull and cache blocks of songs 
        - without going thru frontend itself

    [ ] allow frontend to play new songs (after first five)
        [ ] but this also requires changing the one-request at a time thing

    [ ] add api rate limiting on proxy-2
        no more than 5 requests in 10 seconds (without override)

7.1

    [x] refactor with controllers
        
    [ ] minor imporvements
        [ ] checking status code in searchItem
        [ ] adding videoEmbeddable
        [ ] check for requestResponseValid=true in query

    [x] Build a cached-block frontend and have that apply to 

        [x] request query params choses the variables on playlist load:
            ?time=1:14pm&date=5-22-21            

            [x] add in a url fork option
                this is in blocks-script.js
                just check the page's / window's urlbar
                window.location.href

            [x] move index.html into views

            [x] move the decodeQuery function into utils
            
            [x] test it
        
        [x] add a frontend page
            [x] display blocks in a crude style
            [x] these blocks make requests to main page with params


7.1
    
    [ ] why is there a different size in the same requests (in Network tab)?
        - the initial request is 100x larger
        - 16,000 bytes vs 240 bytes
        - but they appear the same length ?
        - must be compression or encoding ?
        [ ] check the response code
    
    [ ] weird deploy issue on cors

        Access to fetch at 'https://wumb-proxy-2.herokuapp.com/parse?live=true&d=210522' 
        from origin 'https://wumb-front-v1.herokuapp.com' 
        has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header 
        is present on the requested resource. 
        If an opaque response serves your needs, 
        set the request's mode to 'no-cors' to fetch the resource with CORS disabled.

    [ ] long wait time for updating playlist ...(3-5 seconds for parse to return)
        - investigate why?
        - maybe it's because limited incoming/outgoing bandwith on heroku server?
        [ ] compared against page load time on browser
        [ ] time it server side
            

    [x] investigate secondary info from api we can add:

        info on api params:
        https://developers.google.com/youtube/v3/docs/search/list?apix_params=%7B%22part%22%3A%22snippet%22%2C%22order%22%3A%22viewCount%22%2C%22q%22%3A%22skateboarding%20dog%22%2C%22type%22%3A%22video%22%2C%22videoDefinition%22%3A%22high%22%7D

            videoEmbeddable: true

                "If you specify a value for this parameter, you must also set the type parameter's value to video."

        https://developers.google.com/youtube/v3/docs/videos

            [x] how much does this resource cost in quota?
                -> 1 point
            [x] does multiple videoIds cost more?
                -> apparently not

                all quotas
                https://console.cloud.google.com/iam-admin/quotas?service=youtube.googleapis.com&project=listen-wumb
                
                main impactful quota
                https://console.cloud.google.com/iam-admin/quotas/details;servicem=youtube.googleapis.com;metricm=youtube.googleapis.com%2Fdefault;limitIdm=1%2Fd%2F%7Bproject%7D?project=listen-wumb

                [x] figure out how long it takes for quota to be visible?
                    -> ~10 minutes
                    [x] wait for a plateau
                    [x] send one request, wait for it to apply to quota
                [x] then test a request with 1 vs 3 ids


            https://youtube.googleapis.com/youtube/v3/videos?
                part=snippet%2CcontentDetails%2Cstatistics
                &id=Ks-_Mh1QhMc%2Cc0KYU2j0TM4%2CeIho2S0ZahI
                &key=[YOUR_API_KEY]

                - there are three video id's

                - part=suggestions doesnt appear to work (?)



    [x] move print functions into utils/, fix its references
            
    [ ] get mock db setup
        - this will use mock videos to connect with actual song-titles
        - this can preserve the real database to have the correct songs
        [ ] how to switch the behavior between the two modes? 
            -environmental var?

    [x] commit and deploy cache
        [x] add in an atlasdb cluster
            -> 
            Org: listen-wumb
            Project: wumb1
            Cluster: Cluster0
            DB:   wumbBackend1   
            user: admin
            pass: see todos-6.28.txt

            type: M0 Sandbox max 512 MB 
                -> 3,500 - 15,000 total tracks

        [x] link to proxy-2 server
            [x] check local printouts for sparsity
            [x] deploy
            [x] test manually without seeds
            [x] check heroku logs for printouts
            [x] delete + re-seed using utils
                > heroku run  cd db/crud-utils; node insert-seeds.js --app wumb-proxy-2
            

    [~] add a testDb vs productionDb


    [x] add a route for cached songs:
        
        [x] add a new controller:
            [x] test route
            
        [x] design the api:
            - REST style?
            
                index route: basics
                details route: 
                    gaps of 10 minutes 

        [x] list the needed params:
            - total number of songs
            - min/max times each day
            - number of songs per day

        [x] do some basic queries in demo-client
            [x] find good documentation for this
        
        [x] getTime() from the Date object to an EST time
        
        
        - queries to build "blocks of time"
            a block consist of a date and startTime + endTime
            blocks = [
                {date: '5-13-21',
                 startTime: "7:13 pm",
                 endTime: "8:22 pm",
                 numSongs: 22,
                 },
                 {date: '5-15-21',
                  startTime: "6:00 am",
                  endTime: "6:30 am"
                  numSongs: 7,
                 }
            ]
    

6.29

    to move to a frontenv-v2, need to:
        - factor out util functions into a utils.js
            - how to import export?
            -> then use this to drop into a front-v2 react app
        - develop a js strategy for inserting info from the route?

"The Two fetches":
    fetch("https://wumb-proxy-2.herokuapp.com/parse?live=false&d=210522")
    fetch("https://wumb-proxy-2.herokuapp.com/search-yt-api?time=1:35%20pm&artist=Karen%20Dalton&title=Something%20on%20Your%20Mind%20(from%20In%20My%20Own%20Time)&minsAfter=23&date=5-22-21&live=false&");


6.24

        player api reference
        https://developers.google.com/youtube/iframe_api_reference#Operations

6.22

    Plan of Attack:
     - get proxy-2 setup, and into the pipeline
     - get this express <-> script.js figured out
     - then move the searching functionality to server-sdie
     - from there start building out search caching 

     [x] standup proxy-2 on new port
     [~] how to switch proxy-2 as enpoint on?
        - command line arg?
     [~] research + prototype express <-> js
     [x] move search server side
        [x] hbs variables attached to params and used server side
            - since frontend js is based on route
        [x] fetch -> node-fetch

    [x] test the local site dead+alive
        [x] how to control TestingSwitches from frontend?
            - look in to how scrape did ?live
            - when proxy2-serverside code needs to determine url for search endpoint
            [x] why is key not loading? -> need .dotenv package
            [x] not getting ?live param stuck on
                [x] cp script.js
                [x] why does Aimee Mann keep getting stuck on site-mock?
                    
                    -> escape characters:
                        
                        actual: Aimee Mann	True Believer (from @#%&*! Smilers)
                        encoded: &artist=Aimee%20Mann&title=True%20Believer%20(from%20@

                        [ ] what is the character preventing this ?
        

    [x] deploy proxy-2
        [x] delete existing app
        [x] get current deploy frontend to match
    
    [x] Test Deployment
        [~] get a new api token
        [x] Test Dead
        [x] Test Each Alive?
    
    [x] On deployyment, bug: parse?live=true as default
        [x] is this seen on local as well?
            -> not on parse
        [x] verify on deploy
            -> false alarm

    [x] deploy version still making search requests to mock-site (instead of proxy-2)
        [x] verify on local -> correct there
        [x] fix and deploy
            [x] how to verify if deploy went through?
        [x] new error - cors

    [x] autoplay working
        -> its tough, lookas like there's it depends if user brings focus to the webpage, it will autoplay otherwise notfocus

    [x] frontend improvements
        [x] fix async load out-of-order `vids` bug
        [x] player autoplay -> must bring to focus to page within 2 secs of load
        [x] date + time logic

    [x] make site-mock better
        [x] get actual songs on site mock
            looks like we just put stuff in yt-mock-data
                [x] put the api client in the mock directory
                [x] add api key
                [x] fire it
                [x] get it to write to a file

        [x] more pages on page
            [x] move html file into a directory
            [x] add query param check
            [x] add the query logic to front

        [x] control which page via ?d=21065 parameter

        

    [x] adding the date/time logic
        [x] what forms of string dates work for js?
        [x] figure out the mapping "actual" Date() <-> wumb's ?d=1234
            -> YYMMDD
        [x] add js functionality frontend
            [x] how to catch new Date() errors for validation?
        [x] test it works from front end
        [x] add d= parameter on proxy-2
        test:
        [x] date logic works with proxy for different pages
        [x] date logic works live

    
    [x] deploy + test new logic

        [x] locally: test scrape-dead + scrape-live
            using slug /pagelive

        [x] locally: test search-live 
            [x] test how well it does -> pretty good!
        
        [x] make it 1:10 for the frontend default

        [x] site-mock
        [x] frontend
        [x] proxy2

        [x] frontend bug:
            script.js 146 - setHighlighClass() breaks execution before new playlist loads
            [x] what lines fail? hypothesis holds?
                -> note: 6/2/21 has a page with no songs listed
            [x] replicate locally
                  -> not a perfect replication because we don't recover on deployed app, whereas we do locally
            [x] add try / catch
            [x] push remotely

        [x] deplyed: test wumb-dead + wumb-live 
            [x] how do you control it from the frontend?
                -> via slug

        
    [x] time function to get a subset of songs
            [x] implement first five songs after time specified
            [x] allow form submission to control
            [x] get it to overwrite existing html playlist
        [x] show that you can grabbed different blocks of songs

    [ ] frontend bug: 
        clicking songs outof order doesn't hide the previously highlighted song row
        also occurs when doing "<< prev" button

    [ ] frontend logic: song not externally playable, 
        should skip songs / seek different videoid item in the results
        error message:
            Video unavailable
            Playback on other websites has been disabled by the video owner.
            -> occurs on "canned heat, on the road again"
        [ ] frontend logic to check for status
        [ ] check results json for the indicator

    [ ] frontend bug: player loses ability to do "Next Song" on playlist refresh

    [ ] frontend bug: alert when no playlist items found    
        - informative: are there songs at the time before it?
                        or are there no songs for that day
                        print out existing input time and wumb link

    [ ] frontend bug: if the 0th song never returns api results we should play the 1th, etc,
        as it stands the user will have to click next

    [ ] frontend bug: new playlist load causes pink select of 1th new song but loads 0th new song,
                        then "next >>" skips the 1th song

    [ ] frontend logic: skip songs without a clear artist and title
        e.g. artist: "", title: "SON18-99"

    [ ] frontend logic: 
        - show a loading element while scrape loads
        - show a message on what playlist is loading by default

    [ ] need better refresh playlist logic
        - just calling scrapeArchive() in timeForm is duplicating a lot of DOM creation
        - we want to preserve the currently playing playlist before accepting the new one
        - what about global variables like:
            playlist?

    [x] prototype the search cache
        [x] check that new function returns the same thing
            [x] on dead
            [x] check logging
        [x] add mongoose + Model
            [x] demonstrate loading the SearchReq model in node REPL
        [x] add logging specific to this unit
            [x] turn off exisitng logic
        
        tech details:
            [x] how does mongoose handle consuming nested json? auto fields?
            [ ] how does mongoose handle a query that fails
            [x] how do promise then/catch/finally work for each branch
                -> not the way I expected (converted finally to then)`
            [ ] how to use await with promises    
            [ ] how to string multiple promise db lookups together
                and resolve only when all return empty
        
        [x] convert the seeding code from example

        debugging:
            [x] why is the server not finding existing songs
            -> checkCache wasn't turned on
                
        [x] seed the db with site-mock/yt-mock-data
            [x] first get the db filled with initial seeds, and export
                [ ] write to two separate db's
            [x] need to account for the dynamic id field, 
                by inserting Res, getting id's and using those in inserting request

            -> this will allow us to erase data and repopulate

        
        [x] get utilities and clients ready to work
            [x] extract-seeds testing
            [x] insert-seeds
            [x] view-data
                [x] does redirecting standard out on cmdline ("<cmd> > tmp.json") work for console.logs?
                -> yes
            [x] clear-data
            [x] add utilities directory in db
            [x] which things have to be git mv'd from a previous commit?
            [x] move makeFn to a utils.js
                [~] how to export multiple functions?
            [x] testing time:
                [x] delete all
                [x] rerun the app to load the database
                [x] note the references between titles and videos (randomly assigned at first)
                [x] extract seeds
                [x] alter seeds - the songTitle of not the 1st item
                [x] delete db again
                [x] insert seeds
                [x] check if app works:
                    [x] does playlist load?
                    [x] are the same songTitle and videoIds connected?
                    [x] does cache get hit for most songs in console print?
                    [x] does an external request get made for the altered songTitle?
            
        

        [~] check quota

        [x] .find Methods
            [x] what can we lookup for index 
                - a songArtist && songTitle match
                - a songArtist && songTitle && songAlbum match
                - a DateTime match
                - a fuzzy match
                - we can use normalizedTitle etc

        [x] need extra fields
            - time + date string?
            - last lookup time
        
        [x] results field
            [x] how to link?

    
    misc
        
        [x] does embedded player do commercials on incognito?
            -> mostly not but it coudl be:
            ->https://support.google.com/youtube/answer/132596?hl=en
        [x] need to split album from title
        [ ] better way to handle insertion to js from express
        [ ] we can cache scrapes as well
        [ ] why doesn't intellisense work well in express workspaces?
        [ ] each signed-in user has their own api key associated with theri account
        [ ] url bar should contain params to share the playlist with others
        [ ] if playedDuration > listed duration -> skip rest of song
        [ ] need better landing page logic: what will happen automatically on load?
            - will a default playlist load up?
            - show the already searched time blocks?
        [ ] just show the tile image instead of the player itself
        [ ] add video description as optional 
            - also add in getDuration() result from player
        [ ] show user yt quota on page
        [ ] add a liked song functionality
        [ ] test perf on local + atlasdb - bigO / queryTime for N documents
        [ ] add youtube-dl
        [ ] add chords from chordify.net


    [ ] add scraping logic and basic player controls
        [ ] date + time input buttons
        [ ] tie the parameters of scraper to it
        [ ] backend logic
            [ ] parse string times
            [ ] tie ?d= wumb.org paramter to a particular date
        [ ] hard code the number of songs to play
        



6.21
   
   http://10.1.10.106:8880/guest/s/default/?ap=f0:9f:c2:6c:c2:98&ec=Lk0LfdVBUfriVQMTChpkCiCGnyq_ceWwNpfJ0IhWIKxxXgxTiZiQM0e-sw0U0C9fGu7MuY-9gCqyPU8sHiOuDHuGQRhuEFYGeCkL9DeH_PpidVV0HPQE5bFDjzJUE70hjcur--yzzz55ashSWIP0Axoz5_iSy8X-MUh1UjtHtL5lb_32_43n5Qh-hEWk0X6B

   200 - prep
    10 - js logic
    20 - js logic
    30 - break
    40 - break
    50 - js logic
   300 - js logic
    10 - js logic
    20 - break
    30 - test + commit

    [x] Connect the three elements
        [x] Add Next button to demo
        [x] add currently playing div highlighter
        [x] connect the yt results to vids
        [~] autoplay
        [x] double skip bug
        [x] Test Dead
        [x] Test Live
        [~] problem in the order returned

    [ ] Deploy
        [x] login to personal
        
        [x] how to deploy as subtree?  
            https://stackoverflow.com/questions/5977234/how-can-i-push-a-part-of-my-git-repo-to-heroku

        [x] how to do this with environmental variables?
            >heroku cheroku reate -a wumb-front-v1 
            >git subtree push --prefix frontend heroku master
                >git subtree push --prefix proxy-2 heroku-proxy-2 master
                >git subtree push --prefix site-mock heroku-site-mock master
                >heroku config:set ENV=val --app=wumb-front-v1
            >heroku create -a wumb-site-mock  --remote heroku-site-mock

        [x] deploy all three
            [x] account signup
            [x] env variables
            [x] frontend/
            [x] proxy-1
            [x] add URL switches
            [x] mock-site

            [x] test with vids = [] (empty on init)
            [x] commit - the test flag changes
            [x] push changes to frontend and proxy
        
        
            
        [x] How to switch testing action without code control?
            - different urls

        Testing Scenarios:
            
        /home:
            parser   -> heroku-proxy -> heroku-site-mock
            searcher -> heroku-site-mock

        /pagelive
            parser   -> heroku-proxy -> wumb
            searcher -> heroku-site-mock

        /searchlive
            parser   -> heroku-proxy -> heroku-site-mock
            searcher -> youtube-api

        /alllive
            parser   -> heroku-proxy -> wumb
            searcher -> youtube-api

6.20

    [x] check that quota has reset 
        -> yes!
        -> firing off one request now 9pm EST to see when it resets

    [x] get a yt-embed-player running
        
        [x] research
            
            basic embedding with iframe
            https://developers.google.com/youtube/player_parameters
                seems like you can't actually control the playlist

            using the api
            https://developers.google.com/youtube/iframe_api_reference

        [x] proof of concept:    
            [x] using "Getting started" example
                - why doesn't it autoplay on load?
            [x] loading a video
            player.loadVideoById(
                {"videoId": "FKh8hjJNhWc", 
                "startSeconds":22, 
                "endSeconds":33}
                )
            player.playVideo()
            player.pauseVideo()
            player.getCurrentTime()
            player.getDuration()

        [x] build a list of required params
            [x] loading a song
            [x] playing/pausing
            [x] event for when song is up
            YT.PlayerState:            
                BUFFERING: 3
                CUED: 5
                ENDED: 0
                PAUSED: 2
                PLAYING: 1
                UNSTARTED: -1
            [ ] getting info on the video:
                - duration

        [ ] bugs - getting autoplay to start is buggy:

            Failed to execute 'postMessage' on 'DOMWindow': The target origin provided

            https://stackoverflow.com/questions/27573017/failed-to-execute-postmessage-on-domwindow-https-www-youtube-com-http


    [ ] get a heroku account personally
    [ ] deploy proxy server to heroku
    [ ] better solution for .js -> .hbs / fill in key

    [ ] move yt-search onto proxy



6.19

    How to Solve the quota limit:
        - use the user quota instead of the non-logged in version?
            - investigate by doc:
                [x] difference between quotas
                [x] api quotas
                    https://console.cloud.google.com/iam-admin/quotas?service=youtube.googleapis.com&project=listen-wumb
                    - "queries per minute"  : 1,800,000
                    - "queries per day"     :    10,000
                        
                        this guy is wondering the same thing:
                        https://stackoverflow.com/questions/62578928/google-api-quota-limits-for-youtube-api

                        all the stackoverflows say the same thing:
                        https://stackoverflow.com/questions/66673884/youtube-api-quotas-please-explain-quota-exceeded-how-to-solve
                        https://stackoverflow.com/questions/58116255/youtube-v3-api-quota-usage-assist
                        https://stackoverflow.com/questions/42998086/youtube-video-uploads-rejected-before-api-quota-limit-reached
                        https://stackoverflow.com/questions/43158150/our-application-uploads-hundreds-of-videos-per-day-using-the-youtube-api-but-no
                        https://stackoverflow.com/questions/42998086/youtube-video-uploads-rejected-before-api-quota-limit-reached
                        https://stackoverflow.com/questions/66673884/youtube-api-quotas-please-explain-quota-exceeded-how-to-solve

        - use bing search api
            - looks promising
            - $7 / 1,000 requests

        - spotify api

        - use an economical approach to yt-search with:
            - previous search cache-ing, "memo-ization"-stratgey
            - user log-in to be able to search new blocks
                - move yt-search server-side
            - can have a microservice serverside, to check my api quota and display it clientside
                - this is because we want the cloud console key to be hidden


6.18

    [x] build a html display of js results

    [x] initial proof of concept for YT-search

    [x] build a node app to send the page with the key
        [x] send the basic html
        [x] how to serve javascript file?
            https://expressjs.com/en/starter/static-files.html
            -> express.static('public')
        [x] demonstrate how to do this in a repo with handlebars installed
        [x] how do you put the key into js file?
        [x] apply the change from root -> frontend as git mv
        [x] commit initial frontend
    
    [x] stub out the key insertion handlebars solution
        [x] commit that

    [x] add yt search functionality to script.js
        [x] add cors to cross-site
        [x] why is it rendering as js obj in ul
        [x] increase the timeout to view a increase the async rendering
        [x] convert script js to hbs to turn on bTesting
        [x] demonstrate the async nature of loading up the table
            [x] show the uls get rendered
            [x] build a mock youtube response app

    [x] preparse project for next step:
        [x] change port 3000 -> 3004
        [x] observe the quota - reset + increment
            -> it did not reset at PDT mignight, maybe rolling 24 hours?
        [x] turn the testing params on/off easily
        [x] build a setup.bat
        [x] get actual yt-search data onto mock-site
            [x] demo loading json files from object
            [x] how to load all files in a directory?

    [x] build a readme
        [x] quickstart section
            - how to setup the .env
        [x] remove testing args
        [x] draw diagram of pipeline
    
    [x] make the mock-site return actual youtube data
        [x] get example of yt-search api response
        [x] build list of shortvideos for player testing
            
            use this to find params:
            https://developers.google.com/youtube/v3/docs/search/list?apix=true&apix_params=%7B%22part%22%3A%22snippet%22%2C%22order%22%3A%22viewCount%22%2C%22q%22%3A%22skateboarding%20dog%22%2C%22type%22%3A%22video%22%2C%22videoDefinition%22%3A%22high%22%7D
        
                https://youtube.googleapis.com/youtube/v3/search?
                    part=snippet
                    &order=viewCount
                    &q=skateboarding%20dog
                    &type=video
                    &videoDefinition=high
                    &videoDuration=short
                    &key=[YOUR_API_KEY]'

    [x] check if site does actually scrape

    [~] making the initial table fancier
        [~] add a css to and some classList stuff to make exapndeable subdirs for the result

    

    [~] how to code a file with js intellisense but hbs extension to enable key insertion?
        -> just using cp

    [x] perform search for each of the items
        [x] need to remove "(from <album-name>)" from `title`

    misc questions:
    
        [x] how can we fetch from wumb.org from the client since that site is http while ours is likely https?
            -> yes via proxy

        [ ] how to decode special characters?
            'Everlast - What it&#39;s Like (Music Video)' 
            I think that's the apostrophe

        [ ] extra helpful params in search api?
            [ ] limit the duration
                - could match the duration from the radio
            e.g. sort by viewCount
            https://developers.google.com/youtube/v3/guides/implementation/search

        [ ] get one song from full album
            b/c often full album is upload, 
            the below has a description with each of the songs + timestampm on it
            example - Ginny Hawker and Kay Justice	Waves on the Sea (from Bristol)
                    https://www.youtube.com/watch?v=cO8W0UOtr3Q

6.17
    [x] get proxy server running the fetch
        [x] why doesn't .text() on the fetch work?
        https://gomakethings.com/converting-a-string-into-markup-with-vanilla-js/

    [x] get a git init/commit in there

    [x] get parsing on the DOM from the fetch

    [x] build a static site to simulate the page (no wifi)
        -> site-mock/ express server on port 3005
        -> could just use python -m http.server

    problems:
        [x] we get a lot of \n's in the innerHTML
        [x] dwe also lose our \t which means we don't parse the table correctly for `artist` vs `time` fields
        [x] solutions...try a differnt method to convert from string to html

    [x] Youtube ProofOfConcept
        [x] get youtube api key
        [x] find demo example

            https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=20&q=Beatles%20Seargent&type=video&key=

            Youtube search: javascript
            https://github.com/youtube/api-samples/blob/master/javascript/search.js

            Youtube search: python
            https://github.com/youtube/api-samples/blob/master/python/search.py

            [~] get the auth.js part working, then the search sample
                https://github.com/youtube/api-samples/blob/master/javascript/auth.js
        
        [x] test if .env can work in proxy1
            -> install and import `dotenv` npm package

        [~] is there a way to hide key without using node?
            -> just make it node

        [x] how to serialize in for url?
            -> encodeURI(searchStr)
            
        Misc notes on Google API's

            quotas on youtube
            https://developers.google.com/youtube/v3/determine_quota_cost#videoCategories

            how to restrict a key:
            https://cloud.google.com/docs/authentication/api-keys?hl=en&visit_id=637596178206159069-1127291161&rd=1

            Edit Quotas here (?):
            https://console.cloud.google.com/iam-admin/quotas?service=youtube.googleapis.com&project=listen-wumb

6.13

All Programs on the station
http://www.wumb.org/programs/programdescriptions.php?SortPrograms=4

Affliliate Sites:

    No playlist but does have a soundcloud:
    https://www.bealestreetcaravan.com/weekly-show/bsc2532/


[x] how to make fetches from https document to http remotes?
    - build a proxy server


example playlist, saturday with Holly Harris:
http://wumb.org/cgi-bin/playlist1.pl?date=210522
http://wumb.org/cgi-bin/playlist1.pl?date=210521

    -> notice each day changes by one

parsing notes:
    
    tbs = document.getElementById("MainContentTextOnly").getElementsByTagName("tbody")
    
    Array.from(tbs).map( tb => {return {time: tb.children[0].innerText.split("\t")[0], artist: tb.children[0].innerText.split("\t")[1], title: tb.children[1].innerText}} )

end